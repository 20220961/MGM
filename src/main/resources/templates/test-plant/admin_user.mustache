<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin User Management</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 10px;
            text-align: left;
        }
    </style>
</head>
<body>
<h1>Admin User Management</h1>

<table id="userTable">
    <thead>
    <tr>
        <th>ID</th>
        <th>Login ID</th>
        <th>Password</th>
        <th>Password Check</th>
        <th>Nickname</th>
        <th>Name</th>
        <th>Phone Number</th>
        <th>Email</th>
        <th>Role</th>
        <th>Active</th>
        <th>Actions</th>
        <th>식물할당</th>
    </tr>
    </thead>
    <tbody>
    <!-- 사용자 데이터가 여기에 동적으로 추가됩니다 -->
    </tbody>
</table>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // 사용자 리스트 Fetch API 호출
        fetch('/api/admin/getuserlist')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch user data');
                }
                return response.json();
            })
            .then(data => {
                const userTable = document.querySelector('#userTable tbody');
                userTable.innerHTML = '';  // 기존 내용을 지움

                data.forEach(user => {
                    const row = document.createElement('tr');

                    row.innerHTML = `
                        <td>${user.id}</td>
                        <td><input type="text" id="loginId-${user.id}" value="${user.loginId}"></td>
                        <td><input type="password" id="password-${user.id}" value="${user.password}"></td>
                        <td><input type="password" id="passwordCheck-${user.id}" value="${user.passwordCheck}"></td>
                        <td><input type="text" id="nickname-${user.id}" value="${user.nickname}"></td>
                        <td><input type="text" id="name-${user.id}" value="${user.name}"></td>
                        <td><input type="text" id="phonenumber-${user.id}" value="${user.phonenumber}"></td>
                        <td><input type="text" id="email-${user.id}" value="${user.email}"></td>
                        <td>
                            <select name="role" id="role-${user.id}">
                                <option value="0" ${user.role === 'USER' ? 'selected' : ''}>User</option>
                                <option value="1" ${user.role === 'ADMIN' ? 'selected' : ''}>Admin</option>
                            </select>
                        </td>
                        <td>${user.active ? 'Active' : 'Inactive'}</td>
                        <td>
                            <button type="button" onclick="updateUser(${user.id})">Update</button>
                        </td>
                        <td>식물할당</td>
                    `;

                    userTable.appendChild(row);
                });
            })
            .catch(error => console.error('Error:', error));
    });

    function updateUser(userId) {
        const userForm = {
            id: userId,
            loginId: document.getElementById(`loginId-${userId}`).value,
            password: document.getElementById(`password-${userId}`).value,
            passwordCheck: document.getElementById(`passwordCheck-${userId}`).value,
            nickname: document.getElementById(`nickname-${userId}`).value,
            name: document.getElementById(`name-${userId}`).value,
            phonenumber: document.getElementById(`phonenumber-${userId}`).value,
            email: document.getElementById(`email-${userId}`).value,
            role: document.getElementById(`role-${userId}`).value, // role을 숫자로 전달 (0: USER, 1: ADMIN)
            active: document.getElementById(`active-${userId}`) ? 1 : 0
        };

        fetch('/api/admin/update', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(userForm)
        })
        .then(response => {
            if (response.ok) {
                alert('User updated successfully');
            } else {
                alert('Failed to update user');
            }
        })
        .catch(error => console.error('Error:', error));
    }
</script>
</body>
</html>
