{{> layouts/header}}

<h1>일기 작성</h1>
<form id="diaryForm" enctype="multipart/form-data">
    <label for="title">제목:</label>
    <input type="text" id="title" name="title" required>
    <br>
    <label for="content">내용:</label>
    <textarea id="content" name="content" required></textarea>
    <br>
    <label for="pictures">사진:</label>
    <div id="pictureFields">
        <input type="file" name="pictures" class="pictureField" multiple>
        <br>
    </div>
    <button type="button" onclick="addPictureField()">사진 추가하기</button>
    <br><br>

    <!-- 공개 여부 추가 -->
    <label for="isPublic">공개 여부:</label>
    <input type="radio" id="private" name="isPublic" value="0" checked> 비공개
    <input type="radio" id="public" name="isPublic" value="1"> 전체 공개
    <br><br>

    <button type="submit">작성</button>
</form>

{{> layouts/footer}}

<script>
    // 추가적인 사진 필드 생성 함수
    function addPictureField() {
        var container = document.getElementById("pictureFields");
        var input = document.createElement("input");
        input.type = "file";
        input.name = "pictures";
        input.className = "pictureField";
        container.appendChild(input);
        var br = document.createElement("br");
        container.appendChild(br);
    }

    // 폼 제출 이벤트 처리
    document.getElementById('diaryForm').addEventListener('submit', function(event) {
        event.preventDefault();
        var formData = new FormData(this);

        fetch('/api/diaries/create', {
            method: 'POST',
            body: formData
        })
        .then(response => response.text())
        .then(result => {
            alert(result);
            window.location.href = '/diaries'; // 작성 후 일기장 목록으로 이동
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
</script>
