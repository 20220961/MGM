{{> layouts/header}}

<h1 id="diaryTitle">{{diary.title}}</h1>
<p id="diaryAuthor">작성자: <a href="/user/{{diary.user.id}}/guestbook">{{diary.user.nickname}}</a></p>
<p id="diaryContent">{{diary.content}}</p>

<!-- 이미지를 동적으로 추가하기 위한 빈 div -->
<div id="diaryImages"></div>

<p id="diaryRegdate">작성 시간: {{diary.regdate}}</p>

<button id="editDiary">수정</button>
<button id="deleteDiary">삭제</button>

<form id="editDiaryForm" style="display:none;">
    <input type="text" id="editDiaryTitle" value="{{diary.title}}" required>
    <textarea id="editDiaryContent" required>{{diary.content}}</textarea>
    <input type="file" id="editDiaryImages" multiple>
    <button type="submit">수정 완료</button>
</form>

{{> layouts/footer}}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var diaryId = {{diary.id}}; // 서버에서 전달된 diary ID를 사용

        // 다이어리 데이터를 API로 불러와 이미지 렌더링
        fetch('/api/diaries/' + diaryId)
        .then(response => {
            if (!response.ok) {
                // 게시글을 찾지 못했을 때
                alert('존재하지 않거나 삭제된 게시글입니다.');
                window.location.href = '/diaries'; // 다이어리 목록 페이지로 리다이렉트
            } else {
                return response.json();
            }
        })
        .then(diary => {
            // 다이어리 상세 페이지 내용 업데이트
            document.getElementById('diaryTitle').textContent = diary.title;
            document.getElementById('diaryAuthor').textContent = '작성자: ' + diary.user.nickname;
            document.getElementById('diaryContent').textContent = diary.content;

            const diaryImagesDiv = document.getElementById('diaryImages');
            diary.pictureBase64List.forEach(imageBase64 => {
                const imgElement = document.createElement('img');
                imgElement.src = 'data:image/jpeg;base64,' + imageBase64;
                imgElement.alt = 'Diary Image';
                diaryImagesDiv.appendChild(imgElement);
            });
        })
        .catch(error => {
            console.error('Error fetching diary details:', error);
            alert('게시글을 불러오는 도중 오류가 발생했습니다.');
            window.location.href = '/diaries';
        });

        // 게시글 수정 버튼 클릭 이벤트
        document.getElementById('editDiary').addEventListener('click', function() {
            document.getElementById('editDiaryForm').style.display = 'block';
        });

        // 게시글 수정 폼 제출 이벤트
        document.getElementById('editDiaryForm').addEventListener('submit', function(event) {
            event.preventDefault();

            var formData = new FormData();
            formData.append('title', document.getElementById('editDiaryTitle').value);
            formData.append('content', document.getElementById('editDiaryContent').value);
            var images = document.getElementById('editDiaryImages').files;
            for (var i = 0; i < images.length; i++) {
                formData.append('pictures', images[i]);
            }

            fetch('/api/diaries/' + diaryId + '/update', {
                method: 'PUT',
                body: formData
            })
            .then(response => response.text())
            .then(result => {
                alert(result);
                window.location.reload(); // 수정 후 페이지 새로고침
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });

        // 게시글 삭제 버튼 클릭 이벤트
        document.getElementById('deleteDiary').addEventListener('click', function() {
            if (confirm('이 게시글을 삭제하시겠습니까?')) {
                fetch('/api/diaries/' + diaryId + '/delete', {
                    method: 'PUT'
                })
                .then(response => response.text())
                .then(result => {
                    alert(result);
                    window.location.href = '/diaries'; // 삭제 후 리스트 페이지로 이동
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        });
    });
</script>
